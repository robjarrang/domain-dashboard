"use strict";(()=>{var e={};e.id=352,e.ids=[352],e.modules={3524:e=>{e.exports=require("@prisma/client")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7310:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>P,originalPathname:()=>v,patchFetch:()=>y,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m,staticGenerationBailout:()=>f});var a={};t.r(a),t.d(a,{GET:()=>p,POST:()=>c});var s=t(5419),o=t(9108),n=t(9678),i=t(8070),u=t(4490);async function p(){try{let e=await u._.esp.findMany({orderBy:{name:"asc"}});return i.Z.json(e)}catch(e){return console.error("Failed to fetch ESPs:",e),i.Z.json({error:"Failed to fetch ESPs"},{status:500})}}async function c(e){try{let{name:r}=await e.json();if(!r||"string"!=typeof r)return i.Z.json({error:"Name is required"},{status:400});let t=await u._.esp.create({data:{name:r}});return i.Z.json(t)}catch(e){return console.error("Failed to create ESP:",e),i.Z.json({error:"Failed to create ESP"},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/esps/route",pathname:"/api/esps",filename:"route",bundlePath:"app/api/esps/route"},resolvedPagePath:"/Users/robmoran/Documents/Email Builds/domain-dashboard/src/app/api/esps/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:h,headerHooks:P,staticGenerationBailout:f}=d,v="/api/esps/route";function y(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}},4490:(e,r,t)=>{t.d(r,{_:()=>s});var a=t(3524);let s=global.prisma||new a.PrismaClient}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[638,206],()=>t(7310));module.exports=a})();